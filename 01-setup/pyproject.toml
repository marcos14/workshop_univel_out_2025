[tool.poetry]
name = "langchain-mcp-qdrant-workshop"
version = "0.1.0"
description = "Workshop técnico: LangChain + MCP + Qdrant - Módulo 01: Setup e Fundamentos"
authors = ["Workshop Univel <workshop@univel.edu.br>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.10"
python-dotenv = "^1.0.0"
pydantic = "^2.8.0"
langchain-core = "^0.3.0"
langchain-openai = "^0.2.0"
qdrant-client = "^1.11.0"
redis = "^5.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.0"
pytest = "^8.0.0"

[tool.poetry.scripts]
check-env = "scripts.check_env:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"